// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<form
  className="mx-5 mb-3"
  onSubmit={[Function]}
>
  <span>
    <span
      className="bg-[url('/images/Highlighter.png')] bg-bottom bg-no-repeat block bg-[length:70%_70%] text-[200%] md:text-[400%] "
    >
      <h2
        className="text-purple-light font-poppins text-center font-bold tracking-[-1px] "
      >
        headerText
      </h2>
    </span>
  </span>
  <hr
    className="w-[100%] h-[1.5px] mx-auto bg-gray-100 border-0 rounded dark:bg-gray-700"
  />
  <br />
  <div
    className="grid grid-cols-1 lg:grid-cols-2 gap-4"
  >
    <div
      className="flex flex-col sm:flex-row lg:flex-col gap-5"
    >
      <label
        className="cursor-pointer"
        htmlFor="primaryImageInput"
      >
        <img
          alt="primaryImage"
          className="block drop-shadow-2xl lg:w-full max-h-[340px] sm:max-h-[262px] lg:max-h-[405px]"
          data-nimg="1"
          decoding="async"
          height={340}
          loading="lazy"
          onError={[Function]}
          onLoad={[Function]}
          src="/_next/image?url=%2Fimages%2FemptyImage.png&w=1200&q=75"
          srcSet="/_next/image?url=%2Fimages%2FemptyImage.png&w=640&q=75 1x, /_next/image?url=%2Fimages%2FemptyImage.png&w=1200&q=75 2x"
          style={
            {
              "color": "transparent",
            }
          }
          width={570}
        />
        <input
          accept="image/*"
          autoComplete="off"
          className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center hidden"
          id="primaryImageInput"
          onChange={[Function]}
          required={false}
          type="file"
        />
      </label>
      <div
        className="flex flex-row sm:flex-col lg:flex-row gap-10 sm:gap-4 lg:gap-20"
      >
        <label
          className="cursor-pointer"
          htmlFor="secondaryImageInput"
        >
          <img
            alt="secondaryImage"
            className="block drop-shadow-2xl sm:w-full lg:w-[190px] max-h-[90px] sm:max-h-[137px] lg:max-h-[105px]"
            data-nimg="1"
            decoding="async"
            height={137}
            loading="lazy"
            onError={[Function]}
            onLoad={[Function]}
            src="/_next/image?url=%2Fimages%2FemptyImage.png&w=384&q=75"
            srcSet="/_next/image?url=%2Fimages%2FemptyImage.png&w=256&q=75 1x, /_next/image?url=%2Fimages%2FemptyImage.png&w=384&q=75 2x"
            style={
              {
                "color": "transparent",
              }
            }
            width={190}
          />
          <input
            accept="image/*"
            autoComplete="off"
            className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center hidden"
            id="secondaryImageInput"
            onChange={[Function]}
            required={false}
            type="file"
          />
        </label>
        <div
          className="flex gap-10 sm:gap-4 lg:gap-20"
        >
          <label
            className="cursor-pointer"
            htmlFor="tertiaryImageInput"
          >
            <img
              alt="tertiaryImage"
              className="block drop-shadow-2xl max-h-[90px] sm:max-h-[137px] lg:max-h-[105px]"
              data-nimg="1"
              decoding="async"
              height={137}
              loading="lazy"
              onError={[Function]}
              onLoad={[Function]}
              src="/_next/image?url=%2Fimages%2FemptyImage.png&w=384&q=75"
              srcSet="/_next/image?url=%2Fimages%2FemptyImage.png&w=256&q=75 1x, /_next/image?url=%2Fimages%2FemptyImage.png&w=384&q=75 2x"
              style={
                {
                  "color": "transparent",
                }
              }
              width={190}
            />
            <input
              accept="image/*"
              autoComplete="off"
              className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center hidden"
              id="tertiaryImageInput"
              onChange={[Function]}
              required={false}
              type="file"
            />
          </label>
          <label
            className="cursor-pointer"
            htmlFor="quaternaryImageInput"
          >
            <img
              alt="quaternaryImage"
              className="block drop-shadow-2xl max-h-[90px] sm:max-h-[137px] lg:max-h-[105px]"
              data-nimg="1"
              decoding="async"
              height={137}
              loading="lazy"
              onError={[Function]}
              onLoad={[Function]}
              src="/_next/image?url=%2Fimages%2FemptyImage.png&w=384&q=75"
              srcSet="/_next/image?url=%2Fimages%2FemptyImage.png&w=256&q=75 1x, /_next/image?url=%2Fimages%2FemptyImage.png&w=384&q=75 2x"
              style={
                {
                  "color": "transparent",
                }
              }
              width={190}
            />
            <input
              accept="image/*"
              autoComplete="off"
              className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center hidden"
              id="quaternaryImageInput"
              onChange={[Function]}
              required={false}
              type="file"
            />
          </label>
        </div>
      </div>
    </div>
    <div>
      <div
        className="flex flex-col sm:flex-row sm:gap-16"
      >
        <select
          className="cursor-pointer text-center block py-2.5 w-full text-md text-gray-600 bg-transparent border-0 border-b-2 border-gray-200 dark:text-gray-700 dark:border-gray-700 focus:outline-none focus:ring-0"
          id="typeSelector"
          name="type"
          onChange={[Function]}
          value=""
        >
          <option
            selected={true}
            value="default value"
          >
            typeSelector
          </option>
          <option
            value="product"
          >
            product
          </option>
          <option
            value="service"
          >
            service
          </option>
        </select>
        <select
          className="cursor-pointer text-center block py-2.5 w-full text-md text-gray-600 bg-transparent border-0 border-b-2 border-gray-200 dark:text-gray-700 dark:border-gray-700 focus:outline-none focus:ring-0"
          id="categorySelector"
          name="category"
          onChange={[Function]}
          value=""
        >
          <option
            selected={true}
            value="default value"
          >
            categorySelector
          </option>
          <option
            value="Books"
          >
            books
          </option>
          <option
            value="Furniture"
          >
            furniture
          </option>
          <option
            value="Electronics"
          >
            electronics
          </option>
          <option
            value="Two-wheeler"
          >
            two-wheeler
          </option>
        </select>
      </div>
      <div>
        <input
          autoComplete="off"
          className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center "
          name="productName"
          onChange={[Function]}
          placeholder="productName"
          required={false}
          type="text"
          value=""
        />
        <input
          autoComplete="off"
          className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center py-[75px]"
          name="description"
          onChange={[Function]}
          placeholder="description"
          required={false}
          type="text"
          value=""
        />
        <span
          className="flex gap-4"
        >
          <input
            autoComplete="off"
            className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center w-[47%]"
            name="location"
            onChange={[Function]}
            placeholder="location"
            required={false}
            type="text"
            value=""
          />
          <input
            autoComplete="off"
            className="my-2 block w-full rounded-lg border border-gray-300 p-2.5 text-center w-[47%]"
            name="price"
            onChange={[Function]}
            placeholder="price"
            required={false}
            type="text"
            value=""
          />
        </span>
        <span
          className="flex"
        >
          <button
            className="h-12 w-full md:h-14 lg:h-14 m-1 p-1 rounded-lg border-2 bg-purple-dark font-md text-[17px] text-white shadow-sm"
            type="button"
          >
            uploadImage
          </button>
          <button
            className="h-12 w-full md:h-14 lg:h-14 m-1 p-1 rounded-lg border-2 bg-pumpkin font-md text-[17px] text-white shadow-sm"
            type="submit"
          >
            list
          </button>
        </span>
      </div>
    </div>
  </div>
</form>
`;
